# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

# Uncomment the following line if you don't like systemctl's auto-paging feature:
# export SYSTEMD_PAGER=

# User specific aliases and functions

# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# >>> zhangxin initialize >>>
# module purge
module load gcc/10.3.0-gcc-4.8.5
module load cmake/3.22.2-gcc-10.3.0
module load cuda/11.6.1-gcc-10.3.0
# module load eigen/3.4.0-gcc-10.3.0
module load git/2.35.1-gcc-10.3.0
# module load go/1.17.7-gcc-10.3.0
# module load hdf5/1.12.1-gcc-10.3.0
module load miniconda3/4.10.3-gcc-10.3.0
module load openmpi/4.1.2-gcc-10.3.0
# module load perl/5.34.0-gcc-10.3.0
# module loas r/4.1.3-gcc-10.3.0
# module load tcl/8.6.11-gcc-10.3.0
# <<< zhangxin initialize <<<

# >>> zhangxin path >>>
export CPATH=$CPATH:$HOME/lib/
export CPATH=$CPATH:$HOME/lib/eigen-3.4.0/
export CPATH=$CPATH:$HOME/lib/openmpi-4.1.2/
# <<< zhangxin path <<<

# >>> zhangxin alias >>>
alias zx0='bash ~/content/zx0.sh'
alias zx1='bash ~/content/zx1.sh'
alias zx2='bash ~/content/zx2.sh'
alias zx3='bash ~/content/zx3.sh'
alias zx4='bash ~/content/zx4.sh'
alias zx5='bash ~/content/zx5.sh'
alias zx6='bash ~/content/zx6.sh'
alias zx7='bash ~/content/zx7.sh'
alias zx8='bash ~/content/zx8.sh'
alias zx9='bash ~/content/zx9.sh'
alias zx0X='bash ~/content/zx0.sh'
alias zx1X='bash ~/content/zx1.sh'
alias zx2X='bash ~/content/zx2.sh'
alias zx3X='bash ~/content/zx3.sh'
alias zx4X='bash ~/content/zx4.sh'
alias zx5X='bash ~/content/zx5.sh'
alias zx6X='bash ~/content/zx6.sh'
alias zx7X='bash ~/content/zx7.sh'
alias zx8X='bash ~/content/zx8.sh'
alias zx9X='bash ~/content/zx9.sh'

alias run='sbatch < ~/run.sh'
alias stop='bash ~/stop.sh'

alias zxw1='mpic++ ~/content/my_work.cc -o zxw1 && mpirun -np 1 ~/zxw1'
alias zxw2='mpic++ ~/content/my_work.cc -o zxw2 && mpirun -np 2 ~/zxw2'
alias zxw3='mpic++ ~/content/my_work.cc -o zxw3 && mpirun -np 3 ~/zxw3'
alias zxw4='mpic++ ~/content/my_work.cc -o zxw4 && mpirun -np 4 ~/zxw4'
alias zxw5='mpic++ ~/content/my_work.cc -o zxw5 && mpirun -np 5 ~/zxw5'
alias zxw6='mpic++ ~/content/my_work.cc -o zxw6 && mpirun -np 6 ~/zxw6'
alias zxw7='mpic++ ~/content/my_work.cc -o zxw7 && mpirun -np 7 ~/zxw7'
alias zxw8='mpic++ ~/content/my_work.cc -o zxw8 && mpirun -np 8 ~/zxw8'
alias zxe1='mpic++ ~/content/my_example.cc -o zxe1 && mpirun -np 1 ~/zxe1'
alias zxe2='mpic++ ~/content/my_example.cc -o zxe2 && mpirun -np 2 ~/zxe2'
alias zxe3='mpic++ ~/content/my_example.cc -o zxe3 && mpirun -np 3 ~/zxe3'
alias zxe4='mpic++ ~/content/my_example.cc -o zxe4 && mpirun -np 4 ~/zxe4'
alias zxe5='mpic++ ~/content/my_example.cc -o zxe5 && mpirun -np 5 ~/zxe5'
alias zxe6='mpic++ ~/content/my_example.cc -o zxe6 && mpirun -np 6 ~/zxe6'
alias zxe7='mpic++ ~/content/my_example.cc -o zxe7 && mpirun -np 7 ~/zxe7'
alias zxe8='mpic++ ~/content/my_example.cc -o zxe8 && mpirun -np 8 ~/zxe8'
# <<< zhangxin alias <<<
